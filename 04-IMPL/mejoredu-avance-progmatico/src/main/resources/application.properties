quarkus.http.port=9006
quarkus.swagger-ui.always-include=true

#quarkus.datasource.devservices.enabled=false
quarkus.datasource.db-kind=${SIPSE_DB_DRIVE}
quarkus.datasource.username=${SIPSE_DB_USER}
quarkus.datasource.password=${SIPSE_DB_PASS}
quarkus.datasource.jdbc.url=jdbc:postgresql://${SIPSE_DB_HOST}:${SIPSE_DB_PORT}/${SIPSE_DB_NAME}
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=admin
%dev.quarkus.datasource.password=Mejoredu23#
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://159.54.143.183:5432/mejoreduDB

# Show the SQL statements generated by Hibernate
%dev.quarkus.hibernate-orm.log.sql=true
# Binding params
%dev.quarkus.hibernate-orm.log.bind-parameters=true

solicitud.estatus.eliminado=2242
solicitud.estatus.aprobado=2240
%dev.solicitud.estatus.eliminado=2242
%dev.solicitud.estatus.aprobado=2240

quarkus.naming.enable-jndi=true
quarkus.datasource.jdbc.max-size=16
# By default, use the clean (data) slate approach
%dev.quarkus.hibernate-orm.database.generation = none
# %dev.quarkus.hibernate-orm.sql-load-script = import-dev.sql

# Use this to incrementally work in your app while keeping data
# Useful for rapid dev-check cycles with Quarkus dev mode
%dev-with-data.quarkus.hibernate-orm.database.generation = none
%dev-with-data.quarkus.hibernate-orm.sql-load-script = no-file
##TEST


###PROD
# Let's make sure we don't wipe the production data by accident!
%prod.quarkus.hibernate-orm.database.generation = none
%prod.quarkus.hibernate-orm.sql-load-script = no-file

#CORS
quarkus.http.cors=true
quarkus.http.cors.origins=https://sipse.mejoredu.gob.mx, http://159.54.129.226, http://172.18.0.148, http://localhost, https://www.test-cors.org, *
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
quarkus.http.cors.methods=GET, OPTIONS, POST, DELETE, PUT, PATCH